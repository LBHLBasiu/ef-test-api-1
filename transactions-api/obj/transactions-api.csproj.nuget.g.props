<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <RestoreSuccess Condition=" '$(RestoreSuccess)' == '' ">True</RestoreSuccess>
    <RestoreTool Condition=" '$(RestoreTool)' == '' ">NuGet</RestoreTool>
    <ProjectAssetsFile Condition=" '$(ProjectAssetsFile)' == '' ">/Users/spreston/Projects/transactions-api/transactions-api/obj/project.assets.json</ProjectAssetsFile>
    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">/Users/spreston/.nuget/packages/</NuGetPackageRoot>
    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">/Users/spreston/.nuget/packages/;/usr/local/share/dotnet/sdk/NuGetFallbackFolder</NuGetPackageFolders>
    <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">4.3.1</NuGetToolVersion>
  </PropertyGroup>
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>
  <ItemGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/License.txt" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/License.txt')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/License.txt</TargetPath>
      <DestinationSubDirectory>newrelic/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/License.txt</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/NewRelic.Agent.Core.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/NewRelic.Agent.Core.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/NewRelic.Agent.Core.dll</TargetPath>
      <DestinationSubDirectory>newrelic/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/NewRelic.Agent.Core.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/NewRelic.Agent.Core.pdb" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/NewRelic.Agent.Core.pdb')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/NewRelic.Agent.Core.pdb</TargetPath>
      <DestinationSubDirectory>newrelic/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/NewRelic.Agent.Core.pdb</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/NewRelic.Agent.Extensions.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/NewRelic.Agent.Extensions.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/NewRelic.Agent.Extensions.dll</TargetPath>
      <DestinationSubDirectory>newrelic/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/NewRelic.Agent.Extensions.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/NewRelic.Api.Agent.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/NewRelic.Api.Agent.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/NewRelic.Api.Agent.dll</TargetPath>
      <DestinationSubDirectory>newrelic/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/NewRelic.Api.Agent.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/NewRelic.Profiler.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/NewRelic.Profiler.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/NewRelic.Profiler.dll</TargetPath>
      <DestinationSubDirectory>newrelic/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/NewRelic.Profiler.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/README.md" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/README.md')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/README.md</TargetPath>
      <DestinationSubDirectory>newrelic/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/README.md</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/NewRelic.Providers.Wrapper.AspNetCore.Instrumentation.xml" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/NewRelic.Providers.Wrapper.AspNetCore.Instrumentation.xml')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/NewRelic.Providers.Wrapper.AspNetCore.Instrumentation.xml</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/NewRelic.Providers.Wrapper.AspNetCore.Instrumentation.xml</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/NewRelic.Providers.Wrapper.HttpClient.Instrumentation.xml" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/NewRelic.Providers.Wrapper.HttpClient.Instrumentation.xml')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/NewRelic.Providers.Wrapper.HttpClient.Instrumentation.xml</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/NewRelic.Providers.Wrapper.HttpClient.Instrumentation.xml</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/NewRelic.Providers.Wrapper.Misc.Instrumentation.xml" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/NewRelic.Providers.Wrapper.Misc.Instrumentation.xml')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/NewRelic.Providers.Wrapper.Misc.Instrumentation.xml</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/NewRelic.Providers.Wrapper.Misc.Instrumentation.xml</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/NewRelic.Providers.Wrapper.MongoDb26.Instrumentation.xml" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/NewRelic.Providers.Wrapper.MongoDb26.Instrumentation.xml')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/NewRelic.Providers.Wrapper.MongoDb26.Instrumentation.xml</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/NewRelic.Providers.Wrapper.MongoDb26.Instrumentation.xml</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/NewRelic.Providers.Wrapper.Sql.Instrumentation.xml" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/NewRelic.Providers.Wrapper.Sql.Instrumentation.xml')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/NewRelic.Providers.Wrapper.Sql.Instrumentation.xml</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/NewRelic.Providers.Wrapper.Sql.Instrumentation.xml</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/NewRelic.Providers.Wrapper.SqlAsync.Instrumentation.xml" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/NewRelic.Providers.Wrapper.SqlAsync.Instrumentation.xml')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/NewRelic.Providers.Wrapper.SqlAsync.Instrumentation.xml</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/NewRelic.Providers.Wrapper.SqlAsync.Instrumentation.xml</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/extension.xsd" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/extension.xsd')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/extension.xsd</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/extension.xsd</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Core.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Core.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/netstandard2.0/NewRelic.Core.dll</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/netstandard2.0/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/netstandard2.0/NewRelic.Core.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Parsing.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Parsing.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/netstandard2.0/NewRelic.Parsing.dll</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/netstandard2.0/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/netstandard2.0/NewRelic.Parsing.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Storage.AsyncLocal.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Storage.AsyncLocal.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/netstandard2.0/NewRelic.Providers.Storage.AsyncLocal.dll</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/netstandard2.0/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/netstandard2.0/NewRelic.Providers.Storage.AsyncLocal.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.AspNetCore.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.AspNetCore.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.AspNetCore.dll</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/netstandard2.0/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.AspNetCore.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.CustomInstrumentation.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.CustomInstrumentation.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.CustomInstrumentation.dll</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/netstandard2.0/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.CustomInstrumentation.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.CustomInstrumentationAsync.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.CustomInstrumentationAsync.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.CustomInstrumentationAsync.dll</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/netstandard2.0/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.CustomInstrumentationAsync.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.HttpClient.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.HttpClient.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.HttpClient.dll</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/netstandard2.0/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.HttpClient.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.MongoDb26.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.MongoDb26.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.MongoDb26.dll</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/netstandard2.0/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.MongoDb26.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.Sql.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.Sql.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.Sql.dll</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/netstandard2.0/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.Sql.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.SqlAsync.dll" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.SqlAsync.dll')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.SqlAsync.dll</TargetPath>
      <DestinationSubDirectory>newrelic/extensions/netstandard2.0/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/extensions/netstandard2.0/NewRelic.Providers.Wrapper.SqlAsync.dll</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/libNewRelicProfiler.so" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/libNewRelicProfiler.so')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/libNewRelicProfiler.so</TargetPath>
      <DestinationSubDirectory>newrelic/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/libNewRelicProfiler.so</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/logs/placeholder" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/logs/placeholder')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/logs/placeholder</TargetPath>
      <DestinationSubDirectory>newrelic/logs/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/logs/placeholder</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/newrelic.config" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/newrelic.config')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/newrelic.config</TargetPath>
      <DestinationSubDirectory>newrelic/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/newrelic.config</Link>
    </None>
    <None Include="$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/newrelic.xsd" Condition="Exists('$(NuGetPackageRoot)newrelic.agent/8.13.798/contentFiles/any/netstandard2.0/newrelic/newrelic.xsd')">
      <NuGetPackageId>NewRelic.Agent</NuGetPackageId>
      <NuGetPackageVersion>8.13.798</NuGetPackageVersion>
      <NuGetItemType>None</NuGetItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>newrelic/newrelic.xsd</TargetPath>
      <DestinationSubDirectory>newrelic/</DestinationSubDirectory>
      <Private>True</Private>
      <Link>newrelic/newrelic.xsd</Link>
    </None>
  </ItemGroup>
  <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <Import Project="/usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.netcore.app/2.1.0/build/netcoreapp2.1/Microsoft.NETCore.App.props" Condition="Exists('/usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.netcore.app/2.1.0/build/netcoreapp2.1/Microsoft.NETCore.App.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.extensions.fileproviders.embedded/2.1.0/build/netstandard2.0/Microsoft.Extensions.FileProviders.Embedded.props" Condition="Exists('$(NuGetPackageRoot)microsoft.extensions.fileproviders.embedded/2.1.0/build/netstandard2.0/Microsoft.Extensions.FileProviders.Embedded.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.extensions.configuration.usersecrets/2.1.0/build/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.props" Condition="Exists('$(NuGetPackageRoot)microsoft.extensions.configuration.usersecrets/2.1.0/build/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.entityframeworkcore.design/2.1.0/build/netcoreapp2.0/Microsoft.EntityFrameworkCore.Design.props" Condition="Exists('$(NuGetPackageRoot)microsoft.entityframeworkcore.design/2.1.0/build/netcoreapp2.0/Microsoft.EntityFrameworkCore.Design.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.aspnetcore.mvc.razor.extensions/2.1.0/build/netstandard2.0/Microsoft.AspNetCore.Mvc.Razor.Extensions.props" Condition="Exists('$(NuGetPackageRoot)microsoft.aspnetcore.mvc.razor.extensions/2.1.0/build/netstandard2.0/Microsoft.AspNetCore.Mvc.Razor.Extensions.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.aspnetcore.razor.design/2.1.0/build/netstandard2.0/Microsoft.AspNetCore.Razor.Design.props" Condition="Exists('$(NuGetPackageRoot)microsoft.aspnetcore.razor.design/2.1.0/build/netstandard2.0/Microsoft.AspNetCore.Razor.Design.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.aspnetcore.app/2.1.0/build/netcoreapp2.1/Microsoft.AspNetCore.App.props" Condition="Exists('$(NuGetPackageRoot)microsoft.aspnetcore.app/2.1.0/build/netcoreapp2.1/Microsoft.AspNetCore.App.props')" />
  </ImportGroup>
</Project>